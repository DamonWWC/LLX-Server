version: "3.8"

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:16-alpine
    container_name: llxrice_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: llxrice
      POSTGRES_USER: llxrice_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_strong_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
      TZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./数据库初始化脚本.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - llxrice_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U llxrice_user -d llxrice"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis 缓存
  redis:
    image: redis:7.2-alpine
    container_name: llxrice_redis
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --requirepass ${REDIS_PASSWORD:-your_redis_password}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - llxrice_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # .NET API 服务
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: llxrice/api:latest
    container_name: llxrice_api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=llxrice;Username=llxrice_user;Password=${DB_PASSWORD:-your_strong_password};Pooling=true;Minimum Pool Size=5;Maximum Pool Size=100
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD:-your_redis_password},ssl=false,abortConnect=false
      - TZ=Asia/Shanghai
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - llxrice_network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # Nginx 反向代理（可选）
  # nginx:
  #   image: nginx:alpine
  #   container_name: llxrice_nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - api
  #   networks:
  #     - llxrice_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  llxrice_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
